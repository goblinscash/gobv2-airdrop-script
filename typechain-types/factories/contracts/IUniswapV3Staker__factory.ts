/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IUniswapV3Staker,
  IUniswapV3StakerInterface,
} from "../../contracts/IUniswapV3Staker";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "refundee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "minWidth",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "IncentiveCreated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "rewardToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "refundee",
            type: "address",
          },
        ],
        internalType: "struct IUniswapV3Staker.IncentiveKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getRewardInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "secondsInsideX128",
        type: "uint160",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "incentives",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalRewardUnclaimed",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "totalSecondsClaimedX128",
            type: "uint160",
          },
          {
            internalType: "uint96",
            name: "numberOfStakes",
            type: "uint96",
          },
        ],
        internalType: "struct IUniswapV3Staker.Incentive",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IUniswapV3Staker__factory {
  static readonly abi = _abi;
  static createInterface(): IUniswapV3StakerInterface {
    return new Interface(_abi) as IUniswapV3StakerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IUniswapV3Staker {
    return new Contract(address, _abi, runner) as unknown as IUniswapV3Staker;
  }
}
